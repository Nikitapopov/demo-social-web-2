{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.sass","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Messages/Message/Message.jsx","components/Dialogs/addMessageForm/addMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","path","id","className","styles","dialog","active","name","Message","message","minLength1","minLengthCreator","maxLength50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","validate","required","component","Textarea","Dialogs","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","dialogsItems","values","sendMessage","newMessageBody","compose","dialogsPage"],"mappings":"gNAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAI,eAHV,GACXC,IAAML,WAStC,OAFqCM,YAAQX,EAARW,CAAoCL,K,oBCf7EM,EAAOC,QAAU,CAAC,QAAU,2B,6JCcbC,EAXE,SAACN,GACd,IAAIO,EAAO,aAAaP,EAAMQ,GAC9B,OACI,yBAAKC,UAAWC,IAAOC,OAAS,IAAMD,IAAOE,QACzC,kBAAC,IAAD,CAASX,GAAIM,GACRP,EAAMa,Q,kBCGRC,EARD,SAACd,GACX,OACI,yBAAKS,UAAWC,IAAOC,QAClBX,EAAMe,U,iCCFbC,EAAaC,YAAiB,GAC9BC,EAAcC,YAAiB,ICA/BC,EDmBSC,YAAU,CAAEC,KAAM,qBAAlBD,EAjBQ,SAACrB,GACpB,OACI,0BAAMuB,SAAUvB,EAAMwB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOZ,KAAM,iBACNa,YAAY,qBACZC,SAAU,CAACC,IAAUV,EAAaF,GAClCa,UAAWC,OAGtB,6BACI,6CCeDC,EA1BD,SAAC/B,GACX,IAAIgC,EAAkBhC,EAAMiC,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYC,IAAKD,EAAE3B,GACPK,KAAMsB,EAAEtB,KACRL,GAAI2B,EAAE3B,QAC3D6B,EAAmBrC,EAAMsC,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASH,IAAKG,EAAE/B,GACPO,QAASwB,EAAExB,aAMnE,OACI,yBAAKN,UAAWC,IAAOuB,SACnB,yBAAKxB,UAAWC,IAAO8B,cAClBR,GAEL,yBAAKvB,UAAWC,IAAO4B,UACnB,6BAAMD,GACN,6BACI,kBAACjB,EAAD,CAAqBG,SAZjB,SAACkB,GACjBzC,EAAM0C,YAAYD,EAAOE,uB,wBCJlBC,sBACXhD,IACAO,aAPkB,SAACV,GAAD,MAAY,CAC9BwC,QAASxC,EAAMoD,YAAYZ,QAC3BK,SAAU7C,EAAMoD,YAAYP,YAKH,CAAEI,kBAFhBE,CAGbb","file":"static/js/4.7256b5a9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>;\r\n            return <Component {...this.props}/>;\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3FvpD\"};","import React from 'react';\r\nimport {useLocation, NavLink} from 'react-router-dom';\r\nimport styles from './DialogItem.module.sass';\r\n\r\nlet DialogItem = (props) => {\r\n    let path = '/messages/'+props.id;\r\n    return(\r\n        <div className={styles.dialog + ' ' + styles.active}>\r\n            <NavLink to={path}>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport { useLocation, Route, Link, Switch} from 'react-router-dom';\r\nimport styles from './Message.module.sass';\r\n\r\nlet Message = (props) => {\r\n    return(\r\n        <div className={styles.dialog}>\r\n            {props.message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst minLength1 = minLengthCreator(1);\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst addMessageForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={'newMessageBody'}\r\n                       placeholder=\"Enter your message\"\r\n                       validate={[required, maxLength50, minLength1]}\r\n                       component={Textarea}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default reduxForm({ form: 'dialogsAddMessage' })(addMessageForm);\r\n","import React from 'react';\r\nimport styles from './Dialogs.module.sass';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Messages/Message/Message\";\r\nimport addMessageForm from \"./addMessageForm/addMessageForm\";\r\n\r\nconst AddMessageReduxForm = addMessageForm;\r\n\r\nlet Dialogs = (props) => {\r\n    let dialogsElements = props.dialogs.map(d => <DialogItem key={d.id}\r\n                                                             name={d.name}\r\n                                                             id={d.id} />);\r\n    let messagesElements = props.messages.map(m => <Message key={m.id}\r\n                                                            message={m.message} />);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    };\r\n\r\n    return(\r\n        <div className={styles.dialogs}>\r\n            <div className={styles.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={styles.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { sendMessage } from \"../../redux/dialogs_reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => ({\r\n    dialogs: state.dialogsPage.dialogs,\r\n    messages: state.dialogsPage.messages,\r\n});\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, { sendMessage, }),\r\n)(Dialogs);"],"sourceRoot":""}