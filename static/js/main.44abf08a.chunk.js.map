{"version":3,"sources":["redux/dialogs_reducer.js","components/Users/Users.module.sass","assets/img/preloader.gif","components/Login/Login.module.sass","api/api.js","logo.svg","utils/object_helpers.js","redux/users_reducer.js","redux/auth_reducer.js","redux/app_reducer.js","redux/redux_store.js","components/Navbar/Navbar.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users_selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","hoc/withSuspense.js","App.js","serviceWorker.js","index.js","components/Navbar/Navbar.module.sass","components/common/FormsControls/FormsControls.js","components/common/Preloader/Preloader.jsx","utils/validators/validators.jsx","components/common/Paginator/Paginator.module.sass","components/Header/Header.module.sass","components/common/FormsControls/FormsControls.module.sass","redux/profile_reducer.js"],"names":["initialState","dialogs","id","name","messages","message","sendMessage","newMessage","type","dialogsReducer","state","action","module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","authAPI","getAuthUserData","login","email","password","rememberMe","logout","profileAPI","getProfile","getStatus","updateStatus","status","put","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","toggleIsFetching","toggleFollowingInProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","filter","isAuth","setAuthUserData","payload","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","usersPage","auth","app","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Navbar","props","className","styles","navmenu","to","navmenu__link","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","p","key","selectedPage","page_number","User","user","src","photos","small","user__img","disabled","some","Users","usersList","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","requestUsers","this","Preloader","React","Component","connect","bind","page","totalCount","Header","header","loginBlock","loginBlock__link","HeaderContainer","LoginReduxForm","reduxForm","handleSubmit","error","onSubmit","createField","required","Input","formSummaryError","length","stopSubmit","_error","formData","withSuspense","fallback","ProfileContainer","lazy","DialogsContainer","App","initializeApp","path","render","exact","AppContainer","withRouter","promise","Promise","all","AppContext","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","placeholder","validators","component","text","validate","preloader","value","maxLengthCreator","maxLength","minLengthCreator","minLength","posts","likesCount","profile","addPost","postText","setStatus","newPost","postId"],"mappings":"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","file":"static/js/main.44abf08a.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Name1'},\r\n        {id: 2, name: 'Name2'},\r\n        {id: 3, name: 'Name3'},\r\n        {id: 4, name: 'Name4'},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'Helo'},\r\n        {id: 3, message: 'Hello'},\r\n        {id: 4, message: 'Hellooo'},\r\n    ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let newMessage = {\r\n                id: 5,\r\n                message: action.newMessage,\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const sendMessage = (newMessage) => ({ type: SEND_MESSAGE, newMessage });\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user__img\":\"Users_user__img__1_-gm\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.26ef8bb4.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"Login_formSummaryError__25H2q\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"500a020a-28c9-4fc4-8e4b-cb59d9c2b19d\"\r\n    },\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage=1, pageSize=1){\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`,)\r\n            .then(response => response.data);\r\n    },\r\n    follow(userId){\r\n        return instance.post(`follow/${userId}`, {});\r\n    },\r\n    unfollow(userId){\r\n        return instance.delete(`follow/${userId}`);\r\n    },\r\n};\r\n\r\nexport const authAPI = {\r\n    getAuthUserData(){\r\n        return instance.get('auth/me');\r\n    },\r\n    login(email, password, rememberMe=false){\r\n        return instance.post('auth/login', {email, password, rememberMe});\r\n    },\r\n    logout(){\r\n        return instance.delete('auth/login');\r\n    },\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId){\r\n        return instance.get('profile/' + userId);\r\n    },\r\n    getStatus(userId){\r\n        return instance.get('profile/status/' + userId);\r\n    },\r\n    updateStatus(status){\r\n        return instance.put('profile/status', { status }); // { status } == { status: status }\r\n    },\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if(u[objPropName] === itemId)\r\n            return {...u, ...newObjProps};\r\n        return u;\r\n    })\r\n};\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object_helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [\r\n        // {id: 1, fullName: 'Nick', status: 'Status 1', location: 'Russia', followed: true, img: 'https://avatars.mds.yandex.net/get-pdb/1679978/ce25e81d-0126-4320-8ca7-f1f5d7c03557/s1200?webp=false'},\r\n        // {id: 2, fullName: 'Max', status: 'Status 2', location: 'USA', followed: false, img: 'https://avatars.mds.yandex.net/get-pdb/1679978/ce25e81d-0126-4320-8ca7-f1f5d7c03557/s1200?webp=false'},\r\n        // {id: 3, fullName: 'Diana', status: 'Status 3', location: 'Ukraina', followed: false, img: 'https://avatars.mds.yandex.net/get-pdb/1679978/ce25e81d-0126-4320-8ca7-f1f5d7c03557/s1200?webp=false'},\r\n        // {id: 4, fullName: 'Kate', status: 'Status 4', location: 'Russia', followed: true, img: 'https://avatars.mds.yandex.net/get-pdb/1679978/ce25e81d-0126-4320-8ca7-f1f5d7c03557/s1200?webp=false'},\r\n    ],\r\n    pageSize: 3,\r\n    totalUsersCount: 20,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                // users: [...state.messages] = users: state.users.map(u => u)\r\n\r\n                users: updateObjectInArray(state.users, action.userId,\r\n                    'id', {followed: true}),\r\n                // users: state.users.map(u => {\r\n                //     if(u.id === action.userId)\r\n                //         return {...u, followed: true};\r\n                //     return u;\r\n                // }),\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId,\r\n                    'id', {followed: false}),\r\n                // users: state.users.map(u => {\r\n                //     if(u.id === action.userId)\r\n                //         return {...u, followed: false};\r\n                //     return u;\r\n                // }),\r\n            };\r\n        case SET_USERS:\r\n            return { ...state, users: [...action.users ], };\r\n        case SET_CURRENT_PAGE:\r\n            return { ...state, currentPage: action.currentPage, };\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return { ...state, totalUsersCount: action.totalUsersCount, };\r\n        case TOGGLE_IS_FETCHING:\r\n            return { ...state, isFetching: action.isFetching, };\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId),\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nconst unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nconst setUsers = (users) => ({ type: SET_USERS, users });\r\nconst setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\r\nconst setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, totalUsersCount });\r\nconst toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nconst toggleFollowingInProgress = (followingInProgress, userId) =>\r\n    ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, followingInProgress, userId});\r\n\r\n// thunkCreators - функции, выполняющие комбинацию диспатчей, связанных с асинхронными операциями\r\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(page));\r\n    let data = await usersAPI.getUsers(page, pageSize);\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n    dispatch(toggleIsFetching(false));\r\n};\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingInProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if(response.data.resultCode === 0){\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingInProgress(false, userId));\r\n};\r\nexport const follow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId,\r\n        usersAPI.follow.bind(usersAPI), followSuccess);\r\n};\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId,\r\n        usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n};\r\n\r\nexport default usersReducer;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) =>\r\n    ({ type: SET_AUTH_USER_DATA, payload: {userId, email, login, isAuth} });\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.getAuthUserData();\r\n    if(response.data.resultCode === 0){\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if(response.data.resultCode === 0){\r\n        dispatch(getAuthUserData());\r\n    }\r\n    else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages : 'Some error';\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n};\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if(response.data.resultCode === 0){\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n};\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./auth_reducer\";\r\nconst SET_INITIALIZED_SUCCESS = 'SET_INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () =>\r\n    ({ type: SET_INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSuccess());\r\n    });\r\n};\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile_reducer\";\r\nimport dialogsReducer from \"./dialogs_reducer\";\r\nimport usersReducer from \"./users_reducer\";\r\nimport authReducer from \"./auth_reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app_reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,     // profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport { useLocation, Route, Link, Switch} from 'react-router-dom';\r\nimport styles from './Navbar.module.sass';\r\n\r\nlet Navbar = (props) => {\r\n    return(\r\n        <nav className={styles.navmenu}>\r\n            <Link to='/profile' className={styles.navmenu__link}>Profile</Link>\r\n            <Link to='/messages' className={styles.navmenu__link}>messages</Link>\r\n            <Link to='/users' className={styles.navmenu__link}>users</Link>\r\n            <Link to='/news' className={styles.navmenu__link}>news</Link>\r\n            <Link to='/music' className={styles.navmenu__link}>Music</Link>\r\n            <Link to='/settings' className={styles.navmenu__link}>settings</Link>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React, {useState} from 'react';\r\nimport styles from './Paginator.module.sass';\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i < pagesCount + 1; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div>\r\n        <div>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => setPortionNumber(portionNumber - 1)}>Prev</button>\r\n            }\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                    return <span key={p}\r\n                                 onClick={() => {\r\n                                     onPageChanged(p)\r\n                                 }}\r\n                                 className={currentPage === p\r\n                                     ? `${styles.selectedPage} ${styles.page_number}`\r\n                                     : styles.page_number}>{p}\r\n                </span>\r\n                })\r\n            }\r\n            {portionCount > portionNumber &&\r\n                <button onClick={() => setPortionNumber(portionNumber + 1)}>Next</button>\r\n            }\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport styles from './Users.module.sass';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, follow, unfollow}) => {\r\n    return (\r\n        <div key={user.id}>\r\n            <div>\r\n                <NavLink to={`/profile/${user.id}`}>\r\n                    <img src={user.photos.small\r\n                         ? user.photos.small\r\n                         : 'https://avatars.mds.yandex.net/get-pdb/1679978/ce25e81d-0126-4320-8ca7-f1f5d7c03557/s1200?webp=false'}\r\n                        className={styles.user__img}/>\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {user.followed\r\n                    ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                              onClick={() => {\r\n                                  unfollow(user.id);\r\n                              }}>Unfollow</button>\r\n                    : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                              onClick={() => {\r\n                                  follow(user.id);\r\n                              }}> Follow</button>\r\n                }\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status ? user.status : ''}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({totalUsersCount, pageSize, currentPage, onPageChanged, users, ...props}) => {\r\n    let usersList = users.map(u => <User user={u}\r\n                                         key={u.id}\r\n                                         followingInProgress={props.followingInProgress}\r\n                                         follow={props.follow}\r\n                                         unfollow={props.unfollow}/>\r\n    );\r\n\r\n    return <div>\r\n        <Paginator currentPage={currentPage}\r\n                   onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount}\r\n                   pageSize={pageSize}\r\n        />\r\n        {usersList}\r\n    </div>\r\n};\r\n\r\nexport default Users;","import {createSelector} from 'reselect';\r\n\r\nconst getUsersSelector = (state) => state.usersPage.users;\r\nexport const getUsers =\r\n    createSelector(getUsersSelector, (users) => {\r\n        return users.filter(u => true);\r\n    });\r\n\r\nexport const getPageSize = (state) => state.usersPage.pageSize;\r\nexport const getTotalUsersCount = (state) => state.usersPage.totalUsersCount;\r\nexport const getCurrentPage = (state) => state.usersPage.currentPage;\r\nexport const getIsFetching = (state) => state.usersPage.isFetching;\r\nexport const getFollowingInProgress = (state) => state.usersPage.followingInProgress;\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport { follow, unfollow, requestUsers } from \"../../redux/users_reducer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getUsers,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getFollowingInProgress\r\n} from \"../../redux/users_selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        let {currentPage, pageSize} = this.props;\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        let {pageSize} = this.props;\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    };\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />;\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state),\r\n});\r\n\r\n// let mapStateToProps = (state) => ({\r\n//     users: state.usersPage.users,\r\n//     pageSize: state.usersPage.pageSize,\r\n//     totalUsersCount: state.usersPage.totalUsersCount,\r\n//     currentPage: state.usersPage.currentPage,\r\n//     isFetching: state.usersPage.isFetching,\r\n//     followingInProgress: state.usersPage.followingInProgress,\r\n// });\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { follow, unfollow, requestUsers, }),\r\n)(UsersContainer);","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styles from './Header.module.sass';\r\n\r\nconst Header = (props) => {\r\n    return(\r\n        <header className={styles.header}>\r\n            <div className={styles.loginBlock}>\r\n                { props.isAuth ?\r\n                    <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                : <NavLink to={'login'} className={styles.loginBlock__link}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth_reducer\";\r\nimport {compose} from \"redux\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props}/>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\n\r\n// export default connect(mapStateToProps, {\r\n//     getAuthUserData,\r\n// })(HeaderContainer);\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { logout})\r\n)(HeaderContainer);","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from './Login.module.sass';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {login} from \"../../redux/auth_reducer\";\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email','email',\r\n                [required], Input)}\r\n            {createField('Password','password',\r\n                [required], Input, {type: 'password'})}\r\n            {createField(null,'rememberMe',\r\n                [], Input, {type: 'checkbox'}, 'rememberMe')}\r\n            {error && <div className={styles.formSummaryError}>{error}</div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\r\n\r\nlet Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    };\r\n\r\n    if(props.isAuth){\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    return(<>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </>);\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    login\r\n})(Login);","import React, {Suspense} from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={ <Preloader /> }>\r\n            <Component {...props}/>\r\n        </Suspense>\r\n    }\r\n};","import React, {Component, lazy, Suspense} from 'react';\nimport {BrowserRouter, Route, Switch, withRouter} from 'react-router-dom';\nimport {compose} from \"redux\";\nimport {connect, Provider} from \"react-redux\";\nimport store from './redux/redux_store';\nimport logo from './logo.svg';\nimport styles from './App.sass';\nimport Navbar from './components/Navbar/Navbar';\nimport UsersContainer from './components/Users/UsersContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from \"./components/Login/Login\";\nimport {initializeApp} from \"./redux/app_reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {withSuspense} from \"./hoc/withSuspense\";\nconst ProfileContainer = lazy(() =>  import('./components/Profile/ProfileContainer'));\nconst DialogsContainer = lazy(() =>  import('./components/Dialogs/DialogsContainer'));\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if(!this.props.initialized) {\n            return <Preloader />\n        }\n\n        return (\n            <div className={`row app_wrapper`}>\n                <div className='col-12'>\n                    <HeaderContainer/>\n                </div>\n                <div className='col-3'>\n                    <Navbar/>\n                </div>\n                <div className='col-9'>\n                    <Switch>\n                        <Route path='/profile/:userId?'\n                               render={withSuspense(ProfileContainer)}/>\n                        <Route path='/messages'\n                               render={withSuspense(DialogsContainer)}/>\n                        <Route path='/users'\n                               render={() => <UsersContainer/>}/>\n                        <Route path='/login'\n                               render={() => <Login/>}/>\n                        <Route exact path='/'/>\n                    </Switch>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {initialized: state.app.initialized}\n};\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, { initializeApp }),\n)(App);\n\nconst AppContext = () => {\n    return <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer />\n        </Provider>\n    </BrowserRouter>\n};\n\nexport default AppContext;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport styles from './index.sass';\nimport AppContext from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <AppContext />, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navmenu\":\"Navbar_navmenu__2tp6z\",\"navmenu__link\":\"Navbar_navmenu__link__1h8S-\"};","import React from \"react\";\r\nimport styles from './FormsControls.module.sass'\r\nimport {Field} from \"redux-form\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={`${styles.formControl} ${hasError ? styles.error: ''}`}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (<FormControl {...props}>\r\n        <textarea {...input} {...restProps}/>\r\n    </FormControl>)\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (<FormControl {...props}>\r\n        <input {...input} {...restProps}/>\r\n    </FormControl>)\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => (\r\n    <div>\r\n        <Field placeholder={placeholder}\r\n               name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n);","import React from \"react\";\r\nimport preloader from \"../../../assets/img/preloader.gif\";\r\n\r\nlet Preloader = () => {\r\n    return <img src={preloader} />\r\n};\r\n\r\nexport default Preloader;","export const required = value => {\r\n    if (value)\r\n        return undefined;\r\n    return 'Field is required';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength)\r\n        return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};\r\n\r\nexport const minLengthCreator = (minLength) => (value) => {\r\n    if (value.length < minLength)\r\n        return `Min length is ${minLength} symbols`;\r\n    return undefined;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__1aMrg\",\"page_number\":\"Paginator_page_number__1cZtI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1Pesp\",\"loginBlock\":\"Header_loginBlock__2b5Vr\",\"loginBlock__link\":\"Header_loginBlock__link__3UbOo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__9zggl\",\"error\":\"FormsControls_error__1EXWH\"};","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id:1, message: 'Hi, how are u?', likesCount: 12},\r\n        {id:2, message: 'Bla bla', likesCount: 5},\r\n        {id:3, message: 'Bla', likesCount: 10}\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.postText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts.filter(p => p.id !== action.postId)],\r\n            };\r\n        }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n            };\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPost = (postText) => ({ type: ADD_POST, postText });\r\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId });\r\nconst setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile });\r\nconst setStatus = (status) => ({ type: SET_STATUS, status });\r\n\r\nexport const getProfile = (userId) => async (dispatch) => {// getUsersThunkCreator\r\n    let response = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(status);\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0)\r\n        dispatch(setStatus(status));\r\n};\r\n\r\nexport default profileReducer;\r\n"],"sourceRoot":""}