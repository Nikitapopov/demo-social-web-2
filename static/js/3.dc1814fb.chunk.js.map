{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.sass","hoc/withAuthRedirect.js","components/Profile/MyPosts/Post/Post.module.sass","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","ProfileStatus","editMode","status","activateEditMode","setState","deactivateEditMode","updateStatus","onStatusChange","e","currentTarget","value","prevProps","prevState","onDoubleClick","onChange","autoFocus","onBlur","ProfileInfo","profile","className","styles","descriptionBlock","descriptionBlock__avatar","src","photos","small","fullName","Post","item","item__img","message","likesCount","minLength2","minLengthCreator","maxLength10","maxLengthCreator","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","name","placeholder","component","Textarea","validate","required","MyPosts","memo","postsElements","posts","map","p","index","key","postBlock","values","addPost","newPostText","MyPostsContainer","profilePage","Profile","Preloader","ProfileContainer","userId","match","params","authorizedUserId","history","push","getProfile","getStatus","compose","withRouter"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,yBAA2B,gD,uICGzCC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAI,eAHV,GACXC,IAAML,WAStC,OAFqCM,YAAQX,EAARW,CAAoCL,K,gECf7ER,EAAOC,QAAU,CAAC,UAAY,0B,+HCsDfa,E,4MAnDXX,MAAQ,CACJY,UAAU,EACVC,OAAQ,EAAKN,MAAMM,Q,EAGvBC,iBAAmB,WACf,EAAKC,SAAS,CACVH,UAAU,K,EAIlBI,mBAAqB,WACjB,EAAKD,SAAS,CACVH,UAAU,IAEd,EAAKL,MAAMU,aAAa,EAAKjB,MAAMa,S,EAGvCK,eAAiB,SAACC,GACd,EAAKJ,SAAS,CACVF,OAAQM,EAAEC,cAAcC,S,iEAIbC,EAAWC,GACvBD,EAAUT,SAAWP,KAAKC,MAAMM,QAC/BP,KAAKS,SAAS,CACVF,OAAQP,KAAKC,MAAMM,W,+BAK3B,OACI,8BACMP,KAAKN,MAAMY,UACT,6BACI,0BAAMY,cAAgBlB,KAAKQ,kBAAoBR,KAAKC,MAAMM,QAAU,QAG3EP,KAAKN,MAAMY,UACR,6BACI,2BAAOa,SAAUnB,KAAKY,eAAgBQ,WAAW,EAC1CC,OAAQrB,KAAKU,mBACbK,MAAOf,KAAKN,MAAMa,e,GA5CrBJ,IAAML,WCiBnBwB,G,OAfG,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,QAAShB,EAA0B,EAA1BA,OAAQI,EAAkB,EAAlBA,aACjC,OACI,yBAAKa,UAAWC,IAAOC,kBACnB,yBAAKF,UAAWC,IAAOE,yBAClBC,IAAKL,EAAQM,OAAOC,MAClBP,EAAQM,OAAOC,MACf,yGACP,2BAAIP,EAAQQ,UACZ,kBAAC,EAAD,CAAexB,OAAQA,EACRI,aAAcA,O,4CCG1BqB,EAbJ,SAAC/B,GACR,OACI,yBAAKuB,UAAWC,IAAOQ,MACnB,yBAAKL,IAAI,2DAA2DJ,UAAWC,IAAOS,YACrFjC,EAAMkC,QACP,6BACI,sCACClC,EAAMmC,c,iCCJjBC,EAAaC,YAAiB,GAC9BC,EAAcC,YAAiB,IAmB/BC,EAAmBC,YAAU,CAAEC,KAAM,kBAAlBD,EAjBL,SAACzC,GACjB,OACI,0BAAM2C,SAAU3C,EAAM4C,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,KAAM,cACNC,YAAY,kBACZC,UAAWC,IACXC,SAAU,CAACC,IAAUb,EAAaF,MAG7C,6BACI,6CA+BDgB,EAvBClD,IAAMmD,MAAK,SAAArD,GAEvB,IAAIsD,EAAgBtD,EAAMuD,MAAMC,KAAI,SAACC,EAAGC,GAAJ,OAAc,kBAAC,EAAD,CAAMC,IAAKD,EACLxB,QAASuB,EAAEvB,QACXC,WAAYsB,EAAEtB,gBAMtE,OACI,yBAAKZ,UAAWC,IAAOoC,WACnB,wCACA,6BACI,kBAACpB,EAAD,CAAkBG,SARX,SAACkB,GAChB7D,EAAM8D,QAAQD,EAAOE,iBASjB,yBAAKxC,UAAWC,IAAO+B,OAClBD,O,QCjCFU,EAFQ7D,aAND,SAACV,GACnB,MAAM,CACF8D,MAAO9D,EAAMwE,YAAYV,SAIe,CAAEO,aAA3B3D,CAAsCiD,G,QCS9Cc,EAdD,SAAClE,GACX,OAAIA,EAAMsB,QAGN,6BACI,kBAAC,EAAD,CAAaA,QAAStB,EAAMsB,QACfhB,OAAQN,EAAMM,OACdI,aAAcV,EAAMU,eAEjC,kBAAC,EAAD,OAPG,kBAACyD,EAAA,EAAD,O,gBCATC,E,kLAEE,IAAIC,EAAStE,KAAKC,MAAMsE,MAAMC,OAAOF,OACjCA,IACAA,EAAStE,KAAKC,MAAMwE,mBAEhBzE,KAAKC,MAAMyE,QAAQC,KAAK,UAEhC3E,KAAKC,MAAM2E,WAAWN,GACtBtE,KAAKC,MAAM4E,UAAUP,K,+BAIrB,OACI,6BACI,kBAAC,EAAD,iBAAatE,KAAKC,MAAlB,CACSsB,QAASvB,KAAKC,MAAMsB,QACpBhB,OAAQP,KAAKC,MAAMM,OACnBI,aAAcX,KAAKC,MAAMU,qB,GAlBnBR,IAAML,WA+BtBgF,sBACX1E,aARkB,SAACV,GAAD,MAAY,CAC9B6B,QAAS7B,EAAMwE,YAAY3C,QAC3BhB,OAAQb,EAAMwE,YAAY3D,OAC1BkE,iBAAkB/E,EAAME,KAAK0E,OAC7B3E,OAAQD,EAAME,KAAKD,UAIM,CAAEiF,eAAYC,cAAWlE,mBAClDoE,IACAlF,IAHWiF,CAIbT","file":"static/js/3.dc1814fb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock__avatar\":\"ProfileInfo_descriptionBlock__avatar__hg2tA\"};","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>;\r\n            return <Component {...this.props}/>;\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item__img\":\"Post_item__img__58MHi\"};","import React from 'react';\r\nimport styles from './ProfileInfo.module.sass';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status,\r\n    };\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    };\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    };\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value,\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(prevProps.status !== this.props.status)\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={ this.activateEditMode }>{this.props.status || '---'}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true}\r\n                               onBlur={this.deactivateEditMode}\r\n                               value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport styles from './ProfileInfo.module.sass';\r\nimport ProfileStatus from './ProfileStatus.jsx'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nlet ProfileInfo = ({profile, status, updateStatus}) => {\r\n    return(\r\n        <div className={styles.descriptionBlock}>\r\n            <img className={styles.descriptionBlock__avatar}\r\n                 src={profile.photos.small\r\n                 ? profile.photos.small\r\n                 : 'https://avatars.mds.yandex.net/get-pdb/1679978/ce25e81d-0126-4320-8ca7-f1f5d7c03557/s1200?webp=false'} />\r\n            <p>{profile.fullName}</p>\r\n            <ProfileStatus status={status}\r\n                           updateStatus={updateStatus}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport { useLocation, Route, Link, Switch} from 'react-router-dom';\r\nimport styles from './Post.module.sass';\r\n\r\nlet Post = (props) => {\r\n    return(\r\n        <div className={styles.item}>\r\n            <img src='https://klike.net/uploads/posts/2018-06/1528720172_1.jpg' className={styles.item__img}/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span>\r\n                {props.likesCount}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport styles from './MyPosts.module.sass';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, minLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst minLength2 = minLengthCreator(2);\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst addPostForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={'newPostText'}\r\n                       placeholder=\"Enter your text\"\r\n                       component={Textarea}\r\n                       validate={[required, maxLength10, minLength2]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst AddPostReduxForm = reduxForm({ form: 'profileAddPost' })(addPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postsElements = props.posts.map((p, index) => <Post key={index}\r\n                                                            message={p.message}\r\n                                                            likesCount={p.likesCount}/>);\r\n\r\n    const addNewPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.postBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <AddPostReduxForm onSubmit={addNewPost}/>\r\n            </div>\r\n            <div className={styles.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPost } from \"../../../redux/profile_reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        posts: state.profilePage.posts,\r\n    };\r\n};\r\n\r\nlet MyPostsContainer = connect(mapStateToProps, { addPost })(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport styles from './Profile.module.sass';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nlet Profile = (props) => {\r\n    if(!props.profile)\r\n        return <Preloader/>;\r\n    return(\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}\r\n            />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, updateStatus} from \"../../redux/profile_reducer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId){\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId)\r\n                this.props.history.push('/login');\r\n        }\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}/>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getProfile, getStatus, updateStatus }),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer);"],"sourceRoot":""}